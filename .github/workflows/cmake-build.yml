name: CMake Build for Windows and Linux

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  VCPKG_ROOT: ${{ github.workspace }}/vcpkg

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        architecture: [x64]
        include:
          - os: ubuntu-latest
            vcpkg_triplet: x64-linux
          - os: windows-latest
            vcpkg_triplet: x64-mingw-static

    runs-on: ${{ matrix.os }}

    env:
      VCPKG_DEFAULT_TRIPLET: ${{ matrix.vcpkg_triplet }}

    steps:
      - uses: actions/checkout@v4

      - name: Install system dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build curl ca-certificates git tar zip unzip pkg-config build-essential
        shell: bash

      - name: Install system dependencies (Windows)
        if: runner.os == 'Windows'
        run: |
          choco install ninja
        shell: pwsh

      - name: Setup vcpkg (Linux)
        if: runner.os == 'Linux'
        run: |
          git clone https://github.com/Microsoft/vcpkg.git ${{ env.VCPKG_ROOT }}
          ${{ env.VCPKG_ROOT }}/bootstrap-vcpkg.sh
        shell: bash

      - name: Setup vcpkg (Windows)
        if: runner.os == 'Windows'
        run: |
          git clone https://github.com/Microsoft/vcpkg.git ${{ env.VCPKG_ROOT }}
          & "${{ env.VCPKG_ROOT }}\bootstrap-vcpkg.bat"
        shell: pwsh

      - name: Install vcpkg packages (Linux)
        if: runner.os == 'Linux'
        run: |
          ${{ env.VCPKG_ROOT }}/vcpkg install curl zlib nlohmann-json --triplet ${{ env.VCPKG_DEFAULT_TRIPLET }}
        shell: bash

      - name: Install vcpkg packages (Windows)
        if: runner.os == 'Windows'
        run: |
          & "${{ env.VCPKG_ROOT }}\vcpkg.exe" install curl zlib nlohmann-json --triplet ${{ env.VCPKG_DEFAULT_TRIPLET }}
        shell: pwsh

      - name: Configure CMake
        run: |
          cmake -B ${{ github.workspace }}/build -S ${{ github.workspace }} -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=${{ env.VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake -G "Ninja"

      - name: Build
        run: cmake --build ${{ github.workspace }}/build --config Release

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: YumeCard-${{ matrix.os }}-${{ matrix.architecture }}
          path: |
            ${{ github.workspace }}/build/YumeCard*
            ${{ github.workspace }}/build/*.exe
